library(purrr) 
library(StockPriceSimulator)
library(ggplot2)  
library(Quandl)

# Download data
Quandl.api_key("VZSMB9uWUzm_VBrugWy5")

# Variables
week = 52
day = 365

days <- seq(ISOdate(2015,1,12), by = "day", length.out = day) %>%
  format("%F") %>%
  paste(collapse = ",")

AAPL <- Quandl.datatable('WIKI/PRICES', date = days, ticker = "AAPL")

daycount <- AAPL$date[-1] - AAPL$date[-length(AAPL$date)]
# t is the timestep
t <- 1 / as.double(sum(daycount))

# Load Data 
setwd("/Users/anthony/workspace/thesis/thesis/data") 
load("S_list.RData")

quote <- AAPL$close
u <- log(quote[-1] / quote[-length(quote)])
ubar <- mean(u)

s <- sqrt(1/(length(quote) - 1) * sum((u - ubar)^2)) 

sigma <- s / sqrt(1/360)
mean <- ubar / 1/360 + sigma ^2 / 2

# Create Geometric Brownian Motion with previous computed param
GBM <- sstock(initial_stock_price = quote[1],
              alpha = mean,
              sigma = sigma,
              time_to_maturity = 1,
              scale = 360)
# Compute the log-return
GBM_price <- GBM$stock_price_path
GBM_logreturn <- log(GBM_price[-1] / GBM_price[-length(GBM_price)])

  
ggplot(data.frame(u)) +
  stat_density(aes(u),
               geom = "line",
               colour = 'steelblue') +
  stat_density(data = data.frame(GBM_logreturn), aes(GBM_logreturn),
               geom = "line",
               colour = 'darkred') +
  stat_function(fun = dnorm,
                colour = "black",
                args = list(
                  mean = (mean - sigma ^2 /2 ) * 1/360,
                  sd = sigma * sqrt(1/360) ))